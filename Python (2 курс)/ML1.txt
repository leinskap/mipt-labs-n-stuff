Написать самому ближайших соседей (классификация на ирисе)

1) Сплит данных с шафлингом (аналог train_test_split)
1.1) Считать данные с файла iris.csv
1.2) Написать свой MinMaxScaler
1.3) Перемешать через shuffle
1.4) Разбить на X_train, X_test, y_train, y_test в пропорции 70 на 30

2) Расчет евклидова расстояния между точками
2.1) От каждой точки из test выборки до всех точек train выборки
2.2) Для каждой точки из test выборки найти 5 ближайших

3) Сделать предсказания для тестовой выборки
3.1) Определить какой класс самый популярный из 5 ближайших соседей
3.2) Сохранить предсказания в список y_pred

4) Рассчитать метрику Accuracy
5) Переписать пункт 2 на манхэттенское расстояние с помощью NumPy
Нельзя раздувать X_train!

Пункты 1.2 - 4 выполняются без использования методов numpy, pandas, statistics.

1.1)
import pandas as pd
df = pd.read_csv('iris.csv')

1.3)
import random
a = [1, 2, 3, 4, 5, 6]
b = random.shuffle(a)
print(a)
# => [5, 3, 2, 1, 6, 4]
print(b)
# => None

5)
train = np.array([[1, 1], [2, 2], [3, 3]])
test  = np.array([[1, 1], [2, 2]])

# train = [[1 1] [2 2] [3 3]]
# test = [[1 1] [2 2]]

a = np.repeat(train[np.newaxis, :, :], test.shape[0], axis=0)
# каждая строка нового массива - копия train
# a = [
#     [[1 1] [2 2] [3 3]]
#     [[1 1] [2 2] [3 3]]
# ]

b = np.repeat(test[:, np.newaxis, :], train.shape[0], axis=1)
# каждый столбец нового массива - копия test
# b = [
#     [[1 1] [1 1] [1 1]]
#     [[2 2] [2 2] [2 2]]
# ]

c = a - b
# попарные разницы векторов из train и test
# c = [
#     [[ 0  0] [ 1  1] [ 2  2]]
#     [[-1 -1] [ 0  0] [ 1  1]]
# ]

dists = np.linalg.norm(с, axis=2, ord=1)
# заменяем разницы на манхэтенновские нормы
# dists = [
#     [0. 2. 4.]
#     [2. 0. 2.]
# ]


Ссылки:
1) https://gist.github.com/netj/8836201
https://ru.hexlet.io/qna/python/questions/chto-takoe-funktsiya-shuffle-v-python

5) https://ru.stackoverflow.com/questions/1365913/%D0%A0%D0%B0%D1%81%D1%87%D0%B5%D1%82-%D0%BC%D0%B0%D0%BD%D1%85%D1%8D%D1%82%D1%82%D0%B5%D0%BD%D1%81%D0%BA%D0%BE%D0%B5-%D1%80%D0%B0%D1%81%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D0%B5-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D1%8F-numpy
